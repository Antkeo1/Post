{"ast":null,"code":"import _regeneratorRuntime from \"/Users/antkeo/Code/project/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/antkeo/Code/project/blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jsonPlaceHolder from '../api/jsonPlaceHolder';\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return jsonPlaceHolder.get('./posts');\n\n              case 2:\n                res = _context.sent;\n                dispatch({\n                  type: 'FETCH_POST',\n                  payload: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/antkeo/Code/project/blog/src/actions/index.js"],"names":["jsonPlaceHolder","fetchPosts","dispatch","getState","get","res","type","payload","data"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,wBAA5B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACxB,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBH,eAAe,CAACI,GAAhB,CAAoB,SAApB,CADpB;;AAAA;AACQC,gBAAAA,GADR;AAGEH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAE,YADC;AAEPC,kBAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,iBAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import jsonPlaceHolder from '../api/jsonPlaceHolder'\n\nexport const fetchPosts = () =>\n  async (dispatch, getState) => {\n    const res = await jsonPlaceHolder.get('./posts')\n\n    dispatch({\n      type: 'FETCH_POST',\n      payload: res.data\n    })\n  }\n"]},"metadata":{},"sourceType":"module"}